version: '3.8'

services:
  wattpad-downloader:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${CONTAINER_NAME}
    restart: unless-stopped
    networks:
      - coolify
    labels:
      # Coolify managed labels - DO NOT EDIT
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.configuration={}"
      
      # Traefik labels for routing
      - "traefik.enable=true"
      - "traefik.http.routers.${CONTAINER_NAME}.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.${CONTAINER_NAME}.entrypoints=http"
      - "traefik.http.routers.${CONTAINER_NAME}.service=${CONTAINER_NAME}"
      - "traefik.http.services.${CONTAINER_NAME}.loadbalancer.server.port=80"
      
      # Middleware for compression
      - "traefik.http.middlewares.${CONTAINER_NAME}-gzip.compress=true"
      - "traefik.http.routers.${CONTAINER_NAME}.middlewares=${CONTAINER_NAME}-gzip"
      
      # Health check
      - "traefik.http.services.${CONTAINER_NAME}.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.${CONTAINER_NAME}.loadbalancer.healthcheck.interval=30s"
      
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
      - TZ=UTC
    # Expose port 80 for internal communication
    expose:
      - "80"
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  coolify:
    external: true